# all .profile customization are extracted to this file
# .profile contains following line
# source ~/.profile_custom

export PS1="\u@\h:\w>"

# python problem
# ValueError: unknown locale: UTF-8
# http://stackoverflow.com/questions/15526996/ipython-notebook-locale-error
# export LC_ALL=en_US.UTF-8
# export LANG=en_US.UTF-8
# or uncheck "Set locale variables automatically" at Terminal app preferences
# Terminal App -> Preferences -> Profiles -> Advanced -> Flag "Set locale variables automatically"

# [ shell ]
## Colorize the ls output ##
alias ls='ls -G '
## Use a long listing format ##
alias ll='ls -la '
## Show hidden files ##
alias l.='ls -d .* -G '
# cd
alias ..='cd ..'
alias ...='cd ../..'
alias ....='cd ../../..'
alias .....='cd ../../../..'
alias dockerpsn='docker ps --format="{{.Names}}"'
alias dockerpsn1='dockerpsn | head -n 1'
alias flush_dns='sudo killall -HUP mDNSResponder'
alias dangling_images='docker images -f "dangling=true" -q'
alias stopped_containers='docker ps -f "status=exited" -q'

# common
export DEVELOPMENT_HOME=$HOME/Development
export DEVELOPMENT_BIN=$DEVELOPMENT_HOME/bin
export DEVELOPMENT_SH=$DEVELOPMENT_HOME/sh
export HG_REPOS=$DEVELOPMENT_HOME/hg
export GIT_REPOS=$DEVELOPMENT_HOME/git

alias hgrepos="cd $HG_REPOS"
alias gitrepos="cd $GIT_REPOS"
alias devbin="cd $DEVELOPMENT_BIN"
alias devsh="cd $DEVELOPMENT_SH"
alias gitr='cd $(git root)'

# anaconda docker
export ML_PYTHON3_DOCKER_HOME=$GIT_REPOS/ml-docker/
# boot
export BOOT_HOME=$DEVELOPMENT_BIN/boot
# dl
export DL_CPU_DOCKER_HOME=$GIT_REPOS/dl-docker/cpu
# elastic
export ES_HOME=$DEVELOPMENT_BIN/elasticsearch
# emacs
export EMACS_TOOLS="${HOME}/emacs/bin/tools/diff"
# git
export GIT_HOME=/usr/local/git/bin
# go lang
export GOROOT=$DEVELOPMENT_BIN/go
export GOPATH=$DEVELOPMENT_BIN/gopath
# groovy
export GROOVY_HOME=$DEVELOPMENT_BIN/groovy
# gradle
export GRADLE_HOME=$DEVELOPMENT_BIN/gradle
# haskell
export GHC_HOME=$DEVELOPMENT_BIN/ghc
export CABAL_HOME=$HOME/.cabal
export STACK_HOME=$DEVELOPMENT_BIN/stack
# hg
export MERCURIAL_HOME=$DEVELOPMENT_BIN/mercurial
# hugo
export HUGO_HOME=$DEVELOPMENT_BIN/hugo
# jdk
export JDK8_HOME=$DEVELOPMENT_BIN/jdk8
export JDK_HOME=$DEVELOPMENT_BIN/jdk
export JAVA_HOME=$JDK_HOME
# kotlin
export KOTLIN_HOME=$DEVELOPMENT_BIN/kotlinc
# julia
export JULIA_BIN_HOME=$DEVELOPMENT_BIN/julia
# scala
export SCALA_HOME=$DEVELOPMENT_BIN/scala
export SBT_HOME=$DEVELOPMENT_BIN/sbt
# spark
export SPARK_HOME=$DEVELOPMENT_BIN/spark
# leiningen
export LEIN_BIN_HOME=$DEVELOPMENT_BIN/lein
export LEIN_PLUGIN_ALIASES=$DEVELOPMENT_BIN/lein-aliases
# maven
export M2_HOME=$DEVELOPMENT_BIN/maven
# ocaml
export OPAM_HOME=$DEVELOPMENT_BIN/opam
# phantomjs
export PHANTOMJS_HOME=$DEVELOPMENT_BIN/phantomjs
# pytorch
export PYTORCH_DOCKER_HOME=$GIT_REPOS/pytorch-docker
# rust
export RUST_SRC_PATH=$GIT_REPOS/rust_src/src
export RACER_HOME=$DEVELOPMENT_BIN/racer
export RACER_PATH=$RACER_HOME/target/release
# visual vm
export VISUAL_VM_HOME=$DEVELOPMENT_BIN/visualvm
# wget
export WGET_HOME=$DEVELOPMENT_BIN/wget

# path
export MY_PATHS=(
    $DEVELOPMENT_SH/mac
    $DEVELOPMENT_SH/nix
    $DEVELOPMENT_SH/nix/git-fire
    $DEVELOPMENT_SH/nix/git-recall
    $DEVELOPMENT_SH/nix/diff-so-fancy
    $ML_PYTHON3_DOCKER_HOME
    $DL_CPU_DOCKER_HOME

    $BOOT_HOME/bin
    $CABAL_HOME/bin
    $EMACS_TOOLS
    $GIT_HOME
    $GHC_HOME/bin
    $GOROOT/bin
    $GOPATH/bin
    $GROOVY_HOME/bin
    $GRADLE_HOME/bin
    $HUGO_HOME/bin
    $JAVA_HOME/bin
    $JULIA_BIN_HOME/bin
    $KOTLIN_HOME/bin
    $LEIN_BIN_HOME
    $LEIN_PLUGIN_ALIASES
    $M2_HOME/bin
    $MERCURIAL_HOME
    $OPAM_HOME/bin
    $PHANTOMJS_HOME/bin
    $PYTORCH_DOCKER_HOME
    $RACER_PATH
    $SBT_HOME/bin
    $SCALA_HOME/bin
    $SPARK_HOME/bin
    $STACK_HOME
    $VISUAL_VM_HOME/bin
    $WGET_HOME/bin
    $HOME/.local/bin
)

function join {
    local IFS="$1"
    shift
    echo "$*"
}

function not_in_path {
    current_path=$1
    shift
    my_paths=$@

    i=0
    declare -a not_used=()

    for p in ${my_paths[@]}
    do
        if [[ $current_path != *$p* ]]; then
            not_used[$i]="$p"
            i=$((i + 1))
        fi
    done
    echo `join ":" "${not_used[@]}"`
}

export MY_ADDITIONAL_PATHS=`not_in_path $PATH "${MY_PATHS[@]}"`
# patch PATH for terminal programs
if [ -n "$MY_ADDITIONAL_PATHS" ]; then
    export PATH=$MY_ADDITIONAL_PATHS:$PATH
fi
